组合模式(Composite),将对象组合成树形结构以表示'部分-整体'的层次结构.组合模式使得用户对单个对象和组合对象的使用具有一致性.

透明方式与安全方式
	透明方式:在Component中声明所有用来管理子对象的方法,其中包括Add,Remove等.这样实现了Component接口的所有子类都具备了Add和Remove.这样做的好处是叶节点和枝节点对于外界没有什么区别,它们具备完全一致的行为接口.但问题也很明显,因为Leaf类本身不具备Add和Remove方法的功能,所以实现它是没有意义的.
	安全方式:就是在Component中不去声明Add和Remove方法,那么子类的Leaf就不需要去实现它,而是在Composite声明所有用来管理子类对象的方法,不过由于不够透明,树叶和树枝类将不具有相同的接口,客户端的调用需要做相应的判断,带来了不变.

使用场景:当发现需求中是体现部分与整体的层次结构时,以及希望用户可以忽略组合对象与单个对象的不同,统一地使用组合结构中的所有对象时.
